/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.25).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.cuupa.classificator.api.v2

import com.cuupa.classificator.api_client.model.ClassificationRequest
import com.cuupa.classificator.api_client.model.ClassificationResult
import com.cuupa.classificator.api_client.model.Error
import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.Parameter
import io.swagger.v3.oas.annotations.enums.ParameterIn
import io.swagger.v3.oas.annotations.media.Content
import io.swagger.v3.oas.annotations.media.Schema
import io.swagger.v3.oas.annotations.responses.ApiResponse
import io.swagger.v3.oas.annotations.responses.ApiResponses
import org.springframework.http.ResponseEntity
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod
import javax.annotation.Generated
import javax.validation.Valid

/**
 * @author Simon Thiel (https://github.com/cuupa) (29.05.2021)
 */
@Generated(value = ["io.swagger.codegen.v3.generators.java.SpringCodegen"], date = "2021-05-29T11:42:02.031Z[GMT]")
@Validated
interface ClassificationApi {
    @Operation(summary = "Classifies the posted document", description = "", tags = ["functional", "v2"])
    @ApiResponses(
        value = [ApiResponse(
            responseCode = "200",
            description = "The result of the classification",
            content = [Content(schema = Schema(implementation = ClassificationResult::class))]
        ), ApiResponse(
            responseCode = "500",
            description = "Internal server error",
            content = [Content(schema = Schema(implementation = Error::class))]
        )]
    )
    @RequestMapping(
        value = ["/api/rest/v2/classification"],
        produces = ["application/json"],
        consumes = ["application/json"],
        method = [RequestMethod.POST]
    )
    fun classifyPost(
        @Parameter(
            `in` = ParameterIn.DEFAULT,
            description = "The classification request",
            required = true,
            schema = Schema()
        ) @RequestBody body: @Valid ClassificationRequest?
    ): ResponseEntity<String>
}